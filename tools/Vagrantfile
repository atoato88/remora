# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Require a recent version of vagrant otherwise some have reported errors setting host names on boxes
Vagrant.require_version ">= 1.7.4"

# Give VM 1024MB of RAM by default
# In Fedora VM, tmpfs device is mapped to /tmp.  tmpfs is given 50% of RAM allocation.
# When doing Salt provisioning, we copy approximately 200MB of content in /tmp before anything else happens.
# This causes problems if anything else was in /tmp or the other directories that are bound to tmpfs device (i.e /run, etc.)
$vm_etcd_mem = (ENV['KUBERNETES_ETCD_MEMORY'] || ENV['KUBERNETES_MEMORY'] || 1280).to_i
$vm_master_mem = (ENV['KUBERNETES_MASTER_MEMORY'] || ENV['KUBERNETES_MEMORY'] || 1280).to_i
$vm_node_mem = (ENV['KUBERNETES_NODE_MEMORY'] || ENV['KUBERNETES_MEMORY'] || 2048).to_i


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  if Vagrant.has_plugin?("vagrant-proxyconf")
    $http_proxy = ENV['KUBERNETES_HTTP_PROXY'] || ""
    $https_proxy = ENV['KUBERNETES_HTTPS_PROXY'] || ""
    $no_proxy = ENV['KUBERNETES_NO_PROXY'] || "127.0.0.1"
    config.proxy.http     = $http_proxy
    config.proxy.https    = $https_proxy
    config.proxy.no_proxy = $no_proxy
  end

  # this corrects a bug in 1.8.5 where an invalid SSH key is inserted.
  if Vagrant::VERSION == "1.8.5"
    config.ssh.insert_key = false
  end

  config.vm.box = "ubuntu/xenial64"

  # Finally, fall back to VirtualBox
  config.vm.provider :virtualbox do |v, override|
    setvmboxandurl(override, :virtualbox)
    v.memory = 1024 # v.customize ["modifyvm", :id, "--memory", vm_mem]
    v.cpus = 1 # v.customize ["modifyvm", :id, "--cpus", $vm_cpus]

    # Use faster paravirtualized networking
    v.customize ["modifyvm", :id, "--nictype1", "virtio"]
    v.customize ["modifyvm", :id, "--nictype2", "virtio"]
  end

  # etcd
  config.vm.define "etcd" do |c|
    customize_vm c, $vm_etcd_mem
    c.vm.network "private_network", ip: "10.0.0.3"
  end

  # Kubernetes master
  config.vm.define "master" do |c|
    customize_vm c, $vm_master_mem
    c.vm.network "private_network", ip: "10.0.0.4"
  end

  # Kubernetes node
  node_vm_name = "node-0"

  config.vm.define node_vm_name do |node|
    customize_vm node, $vm_node_mem

    node.vm.network "private_network", ip: "10.0.0.5"
  end
end
