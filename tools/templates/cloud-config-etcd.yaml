#!/usr/bin/env bash
set -eu
export LC_ALL=C

cat <<EOF
#cloud-config
# Before commit any change please validate this file @ https://coreos.com/validate/

# Set hostname
hostname: ${_NODE_HOSTNAME}

# Set SSH Key
ssh_authorized_keys:
- ${NODE_PUBLIC_KEY}

coreos:
  update:
    reboot-strategy: ${COREOS_REBOOT_STRATEGY:-"etcd-lock"}
  etcd2:
    name: ${_NODE_HOSTNAME}
    discovery: ${DISCOVERY_URL}
    advertise-client-urls: https://${_NODE_ADDRESS}:2379
    initial-advertise-peer-urls: https://${_NODE_ADDRESS}:2380
    listen-client-urls: https://${_NODE_ADDRESS}:2379,http://127.0.0.1:2379
    listen-peer-urls: https://${_NODE_ADDRESS}:2380
    client-cert-auth: true
    cert-file: /etc/kubernetes/ssl/apiserver.pem
    key-file: /etc/kubernetes/ssl/apiserver-key.pem
    trusted-ca-file: /etc/kubernetes/ssl/ca.pem
    ca-file: /etc/kubernetes/ssl/ca.pem
    peer-client-cert-auth: true
    peer-cert-file: /etc/kubernetes/ssl/apiserver.pem
    peer-key-file: /etc/kubernetes/ssl/apiserver-key.pem
    peer-trusted-ca-file: /etc/kubernetes/ssl/ca.pem
    peer-ca-file: /etc/kubernetes/ssl/ca.pem
  units:
    - name: etcd2.service
      command: start
    - name: docker.service
      drop-ins:
      - name: 20-docker-opts.conf
        content: |
          [Service]
          Environment="DOCKER_OPTS=--log-opt max-size=50m --log-opt max-file=5"
    - name: 00-${NODE_NET_DEVICE}.network
      runtime: true
      content: |
        [Match]
        Name=${NODE_NET_DEVICE}

        [Network]
        DNS=${NODE_DNS}
        Address=${_NODE_ADDRESS}/${NODE_NETWORK_RANGE}
        Gateway=${NODE_GATEWAY}
EOF
