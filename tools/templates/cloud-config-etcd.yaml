#!/usr/bin/env bash
set -eu
export LC_ALL=C

cat <<EOF
#cloud-config
# Before commit any change please validate this file @ https://coreos.com/validate/

# Set hostname
hostname: ${_NODE_HOSTNAME}

# Set SSH Key
ssh_authorized_keys:
- ${NODE_PUBLIC_KEY}

coreos:
  update:
    reboot-strategy: ${COREOS_REBOOT_STRATEGY:-"etcd-lock"}
  units:
    - name: etcd-member.service
      command: start
      drop-ins:
      - name: 00-override.conf
        content: |
          [Service]
          Environment="ETCD_IMAGE_TAG=${ETCD_V3_VERSION_TAG}"
          Environment="ETCD_SSL_DIR=/etc/kubernetes/ssl"
          Environment="ETCD_NAME=${_NODE_HOSTNAME}"
          Environment="ETCD_DISCOVERY=${DISCOVERY_URL}"
          Environment="ETCD_ADVERTISE_CLIENT_URLS=https://${_NODE_ADDRESS}:2379"
          Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=https://${_NODE_ADDRESS}:2380"
          Environment="ETCD_LISTEN_CLIENT_URLS=https://${_NODE_ADDRESS}:2379,http://127.0.0.1:2379"
          Environment="ETCD_LISTEN_PEER_URLS=https://${_NODE_ADDRESS}:2380"
          Environment="ETCD_CLIENT_CERT_AUTH=true"
          Environment="ETCD_CERT_FILE=/etc/kubernetes/ssl/apiserver.pem"
          Environment="ETCD_KEY_FILE=/etc/kubernetes/ssl/apiserver-key.pem"
          Environment="ETCD_TRUSTED_CA_FILE=/etc/kubernetes/ssl/ca.pem"
          Environment="ETCD_CA_FILE=/etc/kubernetes/ssl/ca.pem"
          Environment="ETCD_PEER_CLIENT_CERT_AUTH=true"
          Environment="ETCD_PEER_CERT_FILE=/etc/kubernetes/ssl/apiserver.pem"
          Environment="ETCD_PEER_KEY_FILE=/etc/kubernetes/ssl/apiserver-key.pem"
          Environment="ETCD_PEER_TRUSTED_CA_FILE=/etc/kubernetes/ssl/ca.pem"
          Environment="ETCD_PEER_CA_FILE=/etc/kubernetes/ssl/ca.pem"
    - name: docker.service
      drop-ins:
      - name: 20-docker-opts.conf
        content: |
          [Service]
          Environment="DOCKER_OPTS=--log-opt max-size=50m --log-opt max-file=5"
    - name: systemd-networkd.service
      command: stop
    - name: 00-${NODE_NET_DEVICE}.network
      runtime: true
      content: |
        [Match]
        Name=${NODE_NET_DEVICE}

        [Network]
        DNS=${NODE_DNS}
        Address=${_NODE_ADDRESS}/${NODE_NETWORK_RANGE}
        Gateway=${NODE_GATEWAY}
    - name: down-interfaces.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/ip link set ${NODE_NET_DEVICE} down
        ExecStart=/usr/bin/ip addr flush dev ${NODE_NET_DEVICE}
    - name: systemd-networkd.service
      command: restart
EOF
